{"version":3,"sources":["components/Map/Map.module.css","components/Navigation/Navigation.module.css","components/Map/Map.js","components/Navigation/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Map","props","icon","Icon","iconUrl","iconSize","map","data","MapContainer","center","zoom","minZoom","maxZoom","maxBounds","TileLayer","url","attribution","noWrap","info","console","log","countryInfo","_id","Marker","position","lat","long","Popup","className","classes","src","flag","alt","country","cases","deaths","recovered","Date","updated","toLocaleString","Navigation","Nav","App","state","axios","get","res","this","setState","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,MAAQ,qB,mBCA1BD,EAAOC,QAAU,CAAC,IAAM,0B,6PC0CTC,EAtCH,SAACC,GACT,IAAMC,EAAO,IAAIC,OAAK,CAClBC,QAAS,kEACTC,SAAU,CAAC,GAAI,MAGfC,EAAML,EAAMM,KACZ,eAACC,EAAA,EAAD,CAAcC,OAAQ,CAAC,EAAG,GAAIC,KAAM,EAAGC,QAAS,EAAGC,QAAS,GAAIC,UAAW,CAAC,CAAC,KAAM,KAAM,EAAE,IAAK,MAAhG,UACI,cAACC,EAAA,EAAD,CAAWC,IAAI,qDAAqDC,YAAY,0EAA0EC,QAAQ,IACjKhB,EAAMM,KAAKD,KAAI,SAAAY,GAEZ,OADAC,QAAQC,IAAIF,EAAKG,YAAYC,KAEzB,cAACC,EAAA,EAAD,CAA2BC,SAAU,CAACN,EAAKG,YAAYI,IAAKP,EAAKG,YAAYK,MAAOxB,KAAMA,EAA1F,SACA,cAACyB,EAAA,EAAD,UACI,sBAAKC,UAAWC,IAAQF,MAAxB,UACI,qBAAKG,IAAKZ,EAAKG,YAAYU,KAAMC,IAAKd,EAAKe,QAAU,UACrD,6BAAKf,EAAKe,UACV,+BACI,+BAAI,gDAAJ,IAAiCf,EAAKgB,SACtC,+BAAI,6CAAJ,IAA8BhB,EAAKiB,UACnC,+BAAI,gDAAJ,IAAiCjB,EAAKkB,aACtC,+BAAI,kDAAJ,IAAmC,IAAIC,KAAKnB,EAAKoB,SAASC,6BATzDrB,EAAKe,eAiB9B,gDAEJ,OACI,cAAC,WAAD,UACK3B,K,iBC3BEkC,EARI,kBACf,iCACI,qBAAKZ,UAAWC,IAAQY,IAAxB,SACI,sD,yBCsBGC,E,4MAnBbC,MAAQ,CACNpC,KAAM,I,kMAIYqC,IAAMC,IAAI,0C,OAAtBC,E,OACNC,KAAKC,SAAS,CAAEzC,KAAMuC,EAAIvC,O,qIAI1B,OACE,sBAAKqB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAKrB,KAAMwC,KAAKJ,MAAMpC,c,GAfZ0C,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d422c66f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Popup\":\"Map_Popup__2qCrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Navigation_Nav__1qXl3\"};","import React, {Fragment} from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport classes from './Map.module.css';\n\nconst Map = (props) => {\n    const icon = new Icon({\n        iconUrl: 'https://cdn1.iconfinder.com/data/icons/locations-6/48/1-512.png',\n        iconSize: [30, 30]\n    });\n\n    let map = props.data ? (\n        <MapContainer center={[0, 0]} zoom={3} minZoom={3} maxZoom={10} maxBounds={[[180, -180], [-180, 180]]}>\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' noWrap={true} />\n            {props.data.map(info => {\n                console.log(info.countryInfo._id)\n                return (\n                    <Marker key={info.country} position={[info.countryInfo.lat, info.countryInfo.long]} icon={icon}>\n                    <Popup>\n                        <div className={classes.Popup}>\n                            <img src={info.countryInfo.flag} alt={info.country + \" flag\" }/>\n                            <h2>{info.country}</h2>\n                            <ul>\n                                <li><strong>Confirmed:</strong> {info.cases}</li>\n                                <li><strong>Deaths:</strong> {info.deaths}</li>\n                                <li><strong>Recovered:</strong> {info.recovered}</li>\n                                <li><strong>Last Update:</strong> {new Date(info.updated).toLocaleString()}</li>\n                            </ul>\n                        </div>\n                    </Popup>\n                    </Marker>\n                )\n            })}\n        </MapContainer>\n    ) : <p>Data is Loading</p>\n\n    return (\n        <Fragment>\n            {map}\n        </Fragment>\n    )\n};\n\nexport default Map;","import React from 'react';\nimport classes from './Navigation.module.css';\n\nconst Navigation = () => (\n    <header>\n        <nav className={classes.Nav}>\n            <h1>COVID19 TRACKER</h1>\n        </nav>\n    </header>\n);\n\nexport default Navigation\n\n","import './App.css';\nimport React, { Component } from 'react';\nimport Map from './components/Map/Map';\nimport Navigation from './components/Navigation/Navigation';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  state = {\n    data: []\n  }\n  \n  async componentDidMount() {\n    const res = await axios.get(\"https://corona.lmao.ninja/v2/countries\");\n    this.setState({ data: res.data })\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Map data={this.state.data}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}