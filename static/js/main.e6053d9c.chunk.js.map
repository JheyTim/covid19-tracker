{"version":3,"sources":["components/Statistics/Statistics.module.css","store/actions/actionTypes.js","store/actions/covid19.js","util/commafy.js","components/Map/Map.js","components/Navigation/Navigation.js","components/Statistics/Statistics.js","components/Graph/Graph.js","App.js","reportWebVitals.js","store/reducer/covid19.js","index.js","components/Map/Map.module.css","components/Navigation/Navigation.module.css","components/Graph/Graph.module.css"],"names":["module","exports","SET_INFO","SET_STAT","SET_GRAPH_STAT","FETCH_START","FETCH_SUCCESS","fetchStart","type","actionTypes","fetchSuccess","initInfo","dispatch","axios","get","then","response","info","data","initStat","stat","initGraph","commafy","value","numberString","split","reverse","reduce","prev","current","index","shouldComma","length","updatedValue","join","Map","this","props","onInitInfo","icon","Icon","iconUrl","iconSize","map","MapContainer","center","zoom","minZoom","maxZoom","maxBounds","TileLayer","url","attribution","noWrap","Marker","position","countryInfo","lat","long","Popup","className","classes","src","flag","alt","country","MapUL","cases","deaths","recovered","Date","updated","toLocaleString","Component","connect","state","Navigation","Nav","Statistics","onInitStat","dashboardStats","primary","label","Math","trunc","todayCases","todayDeaths","todayRecovered","secondary","casesPerOneMillion","deathsPerOneMillion","active","activePerOneMillion","recoveredPerOneMillion","tests","testsPerOneMillion","critical","criticalPerOneMillion","loading","TrackerStats","List","i","TrackerStat","TrackerStatPrimary","TrackerStatSecondary","statistics","Graph","onInitGraph","labels","Object","getOwnPropertyNames","datasets","fill","lineTension","backgroundColor","borderColor","borderWidth","values","graph","GraphContainer","options","title","display","text","fontSize","legend","graphData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","actions","store","createStore","covid19Reducer","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6053d9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackerStats\":\"Statistics_TrackerStats__1BU8f\",\"List\":\"Statistics_List__ujLfc\",\"TrackerStat\":\"Statistics_TrackerStat__Z8Hv9\",\"TrackerStatPrimary\":\"Statistics_TrackerStatPrimary__OLNve\",\"TrackerStatSecondary\":\"Statistics_TrackerStatSecondary__1hpz_\"};","export const SET_INFO = 'SET_INFO';\nexport const SET_STAT = 'SET_STAT';\nexport const SET_GRAPH_STAT = 'SET_GRAPH_STAT';\n\nexport const FETCH_START = 'FETCH_START';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const fetchStart = () => {\n    return {\n        type: actionTypes.FETCH_START\n    }\n}\n\nexport const fetchSuccess = () => {\n    return {\n        type: actionTypes.FETCH_SUCCESS\n    }\n}\n\nexport const setInfo = info => {\n    return {\n        type: actionTypes.SET_INFO,\n        info\n    }\n}\n\nexport const setStatInfo = stat => {\n    return {\n        type: actionTypes.SET_STAT,\n        stat\n    }\n}\n\nexport const setGraph = (data) => {    \n    return {\n        type: actionTypes.SET_GRAPH_STAT,\n        data\n    }\n}\n\nexport const initInfo = () => {\n    return dispatch => {\n        dispatch(fetchStart());\n        axios.get('https://corona.lmao.ninja/v3/covid-19/countries')\n            .then( response => {\n                dispatch(setInfo(response.data));\n                dispatch(fetchSuccess());\n            })\n    }\n}\n\nexport const initStat = () => {\n    return dispatch => {\n        dispatch(fetchStart());\n        axios.get('https://corona.lmao.ninja/v3/covid-19/all')\n            .then( response => {\n                dispatch(setStatInfo(response.data));\n                dispatch(fetchSuccess());\n            })\n    }\n}\n\nexport const initGraph = () => {\n    return dispatch => {\n        dispatch(fetchStart());\n        axios.get('https://corona.lmao.ninja/v3/covid-19/historical/all')\n            .then( response => {\n                dispatch(setGraph(response.data));\n                dispatch(fetchSuccess());\n            })\n    }\n}","export const commafy = (value) => {\n    let numberString = `${value}`;\n      \n    numberString = numberString.split('');\n  \n    numberString.reverse();\n  \n    numberString = numberString.reduce((prev, current, index) => {\n        const shouldComma = (index + 1) % 3 === 0 && index + 1 < numberString.length;\n        let updatedValue = `${prev}${current}`;\n        if ( shouldComma ) {\n            updatedValue = `${updatedValue},`;\n        }\n        return updatedValue;\n    }, '');\n  \n    numberString = numberString.split('');\n    numberString.reverse()\n    numberString = numberString.join('');\n  \n    return numberString;\n}","import React, { Fragment, Component } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport classes from './Map.module.css';\nimport { connect } from 'react-redux';\nimport { initInfo } from '../../store/actions/covid19';\nimport { commafy } from '../../util/commafy';\n\nclass Map extends Component {\n    \n  componentDidMount() {\n    this.props.onInitInfo();\n  }\n    \n    render () {\n        const icon = new Icon({\n            iconUrl: 'https://cdn1.iconfinder.com/data/icons/locations-6/48/1-512.png',\n            iconSize: [30, 30]\n        });\n    \n        let map = <p>Data is Loading</p>\n        \n        if (this.props.data.length > 0) {\n            map = (\n                <MapContainer center={[0, 0]} zoom={3} minZoom={3} maxZoom={10} maxBounds={[[180, -180], [-180, 180]]}>\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' noWrap={true} />\n                    {this.props.data.map(info => {\n                        return (\n                            <Marker key={info.country} position={[info.countryInfo.lat, info.countryInfo.long]} icon={icon}>\n                            <Popup>\n                                <div className={classes.Popup}>\n                                    <img src={info.countryInfo.flag} alt={info.country + \" flag\" }/>\n                                    <h2>{info.country}</h2>\n                                    <ul className={classes.MapUL}>\n                                        <li><strong>Confirmed:</strong> {commafy(info.cases)}</li>\n                                        <li><strong>Deaths:</strong> {commafy(info.deaths)}</li>\n                                        <li><strong>Recovered:</strong> {commafy(info.recovered)}</li>\n                                        <li><strong>Last Update:</strong> {new Date(info.updated).toLocaleString()}</li>\n                                    </ul>\n                                </div>\n                            </Popup>\n                            </Marker>\n                        )\n                    })}\n                </MapContainer>\n            )\n        }\n        return (\n            <Fragment>\n                {map}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      data: state.data\n    }\n}\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n      onInitInfo: () => dispatch(initInfo())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","import React from 'react';\nimport classes from './Navigation.module.css';\n\nconst Navigation = () => (\n    <header>\n        <nav className={classes.Nav}>\n            <h1>COVID19 TRACKER</h1>\n        </nav>\n    </header>\n);\n\nexport default Navigation\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Statistics.module.css';\nimport { commafy } from '../../util/commafy';\nimport { initStat } from '../../store/actions/covid19';\n\nclass Statistics extends Component {\n\n  componentDidMount() {\n    this.props.onInitStat();\n  }\n\n\n    render() {\n        const dashboardStats = [\n          {\n            primary: {\n              label: 'Today\\'s Cases',\n              value: commafy(Math.trunc(this.props.data?.todayCases))\n            }\n          },\n          {\n            primary: {\n              label: 'Today\\'s Deaths',\n              value: commafy(Math.trunc(this.props.data?.todayDeaths))\n            }\n          },\n          {\n            primary: {\n              label: 'Today\\'s Recovered',\n              value: commafy(Math.trunc(this.props.data?.todayRecovered))\n            }\n          },\n            {\n              primary: {\n                label: 'Total Cases',\n                value: commafy(Math.trunc(this.props.data?.cases))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.casesPerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Deaths',\n                value: commafy(Math.trunc(this.props.data?.deaths))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.deathsPerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Active',\n                value: commafy(Math.trunc(this.props.data?.active))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.activePerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Recovered',\n                value: commafy(Math.trunc(this.props.data?.recovered))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.recoveredPerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Tests',\n                value: commafy(Math.trunc(this.props.data?.tests))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.testsPerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Critical',\n                value: commafy(Math.trunc(this.props.data?.critical))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.criticalPerOneMillion))\n              }\n            }\n        ];\n\n        let stat = null;\n\n        if (!this.props.loading) {\n          stat = (\n            <div className={classes.TrackerStats}>\n                <ul className={classes.List}>\n                  { dashboardStats.map(({ primary = {}, secondary = {} }, i) => {\n                      return (\n                      <li key={`Stat-${i}`} className={classes.TrackerStat}>\n                              <p className={classes.TrackerStatPrimary}>\n                                  { primary.value }\n                              </p>\n                              <strong>{ primary.label }</strong>\n                          \n                              {secondary ? <p className={classes.TrackerStatSecondary}>\n                                  { secondary.value }\n                                  <strong> { secondary.label }</strong>\n                              </p>: null}\n                      </li>\n                      );\n                  })}\n                </ul>\n            </div>\n          )\n        }\n        return stat\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      data: state.statistics,\n      loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitStat: () => dispatch(initStat())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","import React, { Component } from 'react';\nimport {Line} from 'react-chartjs-2';\nimport { connect } from 'react-redux';\nimport classes from './Graph.module.css';\nimport { initGraph } from '../../store/actions/covid19';\n\nclass Graph extends Component {\n\n    componentDidMount() {\n        this.props.onInitGraph()\n    }\n\n    render () {\n        let state = {\n            cases: {\n                labels: this.props.data.cases ? Object.getOwnPropertyNames(this.props.data.cases) : [],\n                datasets: [\n                {\n                    label: 'Cases',\n                    fill: false,\n                    lineTension: 0.5,\n                    backgroundColor: 'rgba(13,46,166,751)',\n                    borderColor: 'rgba(44,0,0,1)',\n                    borderWidth: 2,\n                    data: this.props.data.cases ? Object.values(this.props.data.cases) : [],\n                }\n                ]\n            },\n            deaths: {\n                labels: this.props.data.cases ? Object.getOwnPropertyNames(this.props.data.cases) : [],\n                datasets: [\n                {\n                    label: 'Deaths',\n                    fill: false,\n                    lineTension: 0.5,\n                    backgroundColor: 'rgba(13,46,166,751)',\n                    borderColor: 'rgba(44,0,0,1)',\n                    borderWidth: 2,\n                    data: this.props.data.cases ? Object.values(this.props.data.deaths) : [],\n                }\n                ]\n            },\n            recovered: {\n                labels: this.props.data.cases ? Object.getOwnPropertyNames(this.props.data.cases) : [],\n                datasets: [\n                {\n                    label: 'Recovered',\n                    fill: false,\n                    lineTension: 0.5,\n                    backgroundColor: 'rgba(13,46,166,751)',\n                    borderColor: 'rgba(44,0,0,1)',\n                    borderWidth: 2,\n                    data: this.props.data.cases ? Object.values(this.props.data.recovered) : [],\n                }\n                ]\n            }\n        }\n\n        let graph = null;\n        if (!this.props.loading) {\n            graph = (\n                <div className={classes.GraphContainer}>\n                    <Line data={state.cases} \n                    options={{\n                        title:{\n                            display:true,\n                            text:'Cases',\n                            fontSize:20\n                        },\n                        legend:{\n                            display: false\n                        }\n                    }}/>\n                    <Line data={state.deaths} \n                    options={{\n                        title:{\n                            display:true,\n                            text:'Deaths',\n                            fontSize:20\n                        },\n                        legend:{\n                            display: false,\n                        }\n                    }}/>\n                    <Line data={state.recovered} \n                    options={{\n                        title:{\n                            display:true,\n                            text:'Recovered',\n                            fontSize:20\n                        },\n                        legend:{\n                            display: false,\n                        }\n                    }}/>\n                </div>\n            )\n        }\n        return graph;\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n      data: state.graphData,\n      loading: state.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitGraph: () => dispatch(initGraph())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph);","import './App.css';\nimport React, { Component } from 'react';\nimport Map from './components/Map/Map';\nimport Navigation from './components/Navigation/Navigation';\nimport Statistics from './components/Statistics/Statistics';\nimport Graph from './components/Graph/Graph';\nimport 'leaflet/dist/leaflet.css';\n\nclass App extends Component {\n  render () {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Map />\n        <Graph />\n        <Statistics />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    data: [],\n    statistics: {},\n    loading: false,\n    graphData: {}\n}\n\nconst reducer = (state = initialState, actions) => {\n    switch(actions.type) {\n        case actionTypes.SET_INFO:\n            return {\n                ...state,\n                data: actions.info\n            };\n        case actionTypes.SET_STAT:\n            return {\n                ...state,\n                statistics: actions.stat\n            }\n        case actionTypes.SET_GRAPH_STAT:\n            return {\n                ...state,\n                graphData: actions.data\n            }\n        case actionTypes.FETCH_START:\n            return{\n                ...state,\n                loading: true\n            }\n        case actionTypes.FETCH_SUCCESS:\n            return{\n                ...state,\n                loading: false\n            }\n        default: \n            return state\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport covid19Reducer from './store/reducer/covid19';\n\nconst store = createStore(covid19Reducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Popup\":\"Map_Popup__2qCrC\",\"MapUL\":\"Map_MapUL__1Z1SK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Navigation_Nav__1qXl3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GraphContainer\":\"Graph_GraphContainer__12xhN\"};"],"sourceRoot":""}