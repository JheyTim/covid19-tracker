{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Map/Map.module.css","components/Navigation/Navigation.module.css","store/actions/actionTypes.js","store/actions/covid19.js","util/commafy.js","components/Map/Map.js","components/Navigation/Navigation.js","components/Statistics/Statistics.js","App.js","reportWebVitals.js","store/reducer/covid19.js","index.js"],"names":["module","exports","SET_INFO","SET_STAT","FETCH_START","FETCH_SUCCESS","initInfo","dispatch","type","actionTypes","initStat","axios","get","then","response","info","data","stat","commafy","value","numberString","split","reverse","reduce","prev","current","index","shouldComma","length","updatedValue","join","Map","this","props","onInitInfo","icon","Icon","iconUrl","iconSize","map","MapContainer","center","zoom","minZoom","maxZoom","maxBounds","TileLayer","url","attribution","noWrap","Marker","position","countryInfo","lat","long","Popup","className","classes","src","flag","alt","country","MapUL","cases","deaths","recovered","Date","updated","toLocaleString","Component","connect","state","Navigation","Nav","Statistics","dashboardStats","primary","label","Math","trunc","todayCases","todayDeaths","todayRecovered","secondary","casesPerOneMillion","deathsPerOneMillion","active","activePerOneMillion","recoveredPerOneMillion","tests","testsPerOneMillion","critical","criticalPerOneMillion","loading","TrackerStats","List","i","TrackerStat","TrackerStatPrimary","TrackerStatSecondary","statistics","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","actions","store","createStore","covid19Reducer","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0506ca1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackerStats\":\"Statistics_TrackerStats__1BU8f\",\"List\":\"Statistics_List__ujLfc\",\"TrackerStat\":\"Statistics_TrackerStat__Z8Hv9\",\"TrackerStatPrimary\":\"Statistics_TrackerStatPrimary__OLNve\",\"TrackerStatSecondary\":\"Statistics_TrackerStatSecondary__1hpz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Popup\":\"Map_Popup__2qCrC\",\"MapUL\":\"Map_MapUL__1Z1SK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Nav\":\"Navigation_Nav__1qXl3\"};","export const SET_INFO = 'SET_INFO';\nexport const SET_STAT = 'SET_STAT';\n\nexport const FETCH_START = 'FETCH_START';\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const fetchStart = () => {\n    return {\n        type: actionTypes.FETCH_START\n    }\n}\n\nexport const fetchSuccess = () => {\n    return {\n        type: actionTypes.FETCH_SUCCESS\n    }\n}\n\nexport const setInfo = info => {\n    return {\n        type: actionTypes.SET_INFO,\n        info\n    }\n}\n\nexport const setStatInfo = stat => {\n    return {\n        type: actionTypes.SET_STAT,\n        stat\n    }\n}\n\nexport const initInfo = () => {\n    return dispatch => {\n        dispatch(fetchStart());\n        dispatch(initStat());\n        axios.get('https://corona.lmao.ninja/v3/covid-19/countries')\n            .then( response => {\n                dispatch(setInfo(response.data));\n            })\n    }\n}\n\nexport const initStat = () => {\n    return dispatch => {\n        axios.get('https://corona.lmao.ninja/v3/covid-19/all')\n            .then( response => {\n                dispatch(setStatInfo(response.data));\n                dispatch(fetchSuccess());\n            })\n    }\n}\n\n","export const commafy = (value) => {\n    let numberString = `${value}`;\n      \n    numberString = numberString.split('');\n  \n    numberString.reverse();\n  \n    numberString = numberString.reduce((prev, current, index) => {\n        const shouldComma = (index + 1) % 3 === 0 && index + 1 < numberString.length;\n        let updatedValue = `${prev}${current}`;\n        if ( shouldComma ) {\n            updatedValue = `${updatedValue},`;\n        }\n        return updatedValue;\n    }, '');\n  \n    numberString = numberString.split('');\n    numberString.reverse()\n    numberString = numberString.join('');\n  \n    return numberString;\n}","import React, { Fragment, Component } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport classes from './Map.module.css';\nimport { connect } from 'react-redux';\nimport { initInfo } from '../../store/actions/covid19';\nimport { commafy } from '../../util/commafy';\n\nclass Map extends Component {\n    \n  componentDidMount() {\n    this.props.onInitInfo();\n  }\n    \n    render () {\n        const icon = new Icon({\n            iconUrl: 'https://cdn1.iconfinder.com/data/icons/locations-6/48/1-512.png',\n            iconSize: [30, 30]\n        });\n    \n        let map = <p>Data is Loading</p>\n        \n        if (this.props.data.length > 0) {\n            map = (\n                <MapContainer center={[0, 0]} zoom={3} minZoom={3} maxZoom={10} maxBounds={[[180, -180], [-180, 180]]}>\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors' noWrap={true} />\n                    {this.props.data.map(info => {\n                        return (\n                            <Marker key={info.country} position={[info.countryInfo.lat, info.countryInfo.long]} icon={icon}>\n                            <Popup>\n                                <div className={classes.Popup}>\n                                    <img src={info.countryInfo.flag} alt={info.country + \" flag\" }/>\n                                    <h2>{info.country}</h2>\n                                    <ul className={classes.MapUL}>\n                                        <li><strong>Confirmed:</strong> {commafy(info.cases)}</li>\n                                        <li><strong>Deaths:</strong> {commafy(info.deaths)}</li>\n                                        <li><strong>Recovered:</strong> {commafy(info.recovered)}</li>\n                                        <li><strong>Last Update:</strong> {new Date(info.updated).toLocaleString()}</li>\n                                    </ul>\n                                </div>\n                            </Popup>\n                            </Marker>\n                        )\n                    })}\n                </MapContainer>\n            )\n        }\n        return (\n            <Fragment>\n                {map}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      data: state.data\n    }\n}\n  \nconst mapDispatchToProps = dispatch => {\n    return {\n      onInitInfo: () => dispatch(initInfo())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","import React from 'react';\nimport classes from './Navigation.module.css';\n\nconst Navigation = () => (\n    <header>\n        <nav className={classes.Nav}>\n            <h1>COVID19 TRACKER</h1>\n        </nav>\n    </header>\n);\n\nexport default Navigation\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classes from './Statistics.module.css';\nimport { commafy } from '../../util/commafy';\n\nclass Statistics extends Component{\n    render() {\n        const dashboardStats = [\n          {\n            primary: {\n              label: 'Today\\'s Cases',\n              value: commafy(Math.trunc(this.props.data?.todayCases))\n            }\n          },\n          {\n            primary: {\n              label: 'Today\\'s Deaths',\n              value: commafy(Math.trunc(this.props.data?.todayDeaths))\n            }\n          },\n          {\n            primary: {\n              label: 'Today\\'s Recovered',\n              value: commafy(Math.trunc(this.props.data?.todayRecovered))\n            }\n          },\n            {\n              primary: {\n                label: 'Total Cases',\n                value: commafy(Math.trunc(this.props.data?.cases))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.casesPerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Deaths',\n                value: commafy(Math.trunc(this.props.data?.deaths))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.deathsPerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Active',\n                value: commafy(Math.trunc(this.props.data?.active))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.activePerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Recovered',\n                value: commafy(Math.trunc(this.props.data?.recovered))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.recoveredPerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Tests',\n                value: commafy(Math.trunc(this.props.data?.tests))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.testsPerOneMillion))\n              }\n            },\n            {\n              primary: {\n                label: 'Total Critical',\n                value: commafy(Math.trunc(this.props.data?.critical))\n              },\n              secondary: {\n                label: 'Per 1 Million',\n                value: commafy(Math.trunc(this.props.data?.criticalPerOneMillion))\n              }\n            }\n        ];\n\n        let stat = null;\n\n        if (!this.props.loading) {\n          stat = (\n            <div className={classes.TrackerStats}>\n                <ul className={classes.List}>\n                  { dashboardStats.map(({ primary = {}, secondary = {} }, i) => {\n                      return (\n                      <li key={`Stat-${i}`} className={classes.TrackerStat}>\n                              <p className={classes.TrackerStatPrimary}>\n                                  { primary.value }\n                              </p>\n                              <strong>{ primary.label }</strong>\n                          \n                              {secondary ? <p className={classes.TrackerStatSecondary}>\n                                  { secondary.value }\n                                  <strong> { secondary.label }</strong>\n                              </p>: null}\n                      </li>\n                      );\n                  })}\n                </ul>\n            </div>\n          )\n        }\n        return stat\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      data: state.statistics,\n      loading: state.loading\n    }\n}\n\nexport default connect(mapStateToProps)(Statistics);","import './App.css';\nimport React, { Component } from 'react';\nimport Map from './components/Map/Map';\nimport Navigation from './components/Navigation/Navigation';\nimport Statistics from './components/Statistics/Statistics';\nimport 'leaflet/dist/leaflet.css';\n\nclass App extends Component {\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Navigation />\n        <Map />\n        <Statistics />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    data: [],\n    statistics: {},\n    loading: false\n}\n\nconst reducer = (state = initialState, actions) => {\n    switch(actions.type) {\n        case actionTypes.SET_INFO:\n            return {\n                ...state,\n                data: actions.info\n            };\n        case actionTypes.SET_STAT:\n            return {\n                ...state,\n                statistics: actions.stat\n            }\n        case actionTypes.FETCH_START:\n            return{\n                ...state,\n                loading: true\n            }\n        case actionTypes.FETCH_SUCCESS:\n            return{\n                ...state,\n                loading: false\n            }\n        default: \n            return state\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport covid19Reducer from './store/reducer/covid19';\n\nconst store = createStore(covid19Reducer, applyMiddleware(thunk));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}